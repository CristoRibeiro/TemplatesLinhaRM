<#@ template hostspecific="true" language="C#" #>
<#@ parameter type="System.String" name="NomeResourceInfoServer" #>
<#@ parameter type="System.String" name="NomeClasse" #>
<#@ parameter type="System.String" name="NomeNameSpace" #>
<#@ parameter type="System.String" name="NomeClasseDataSet" #>
<#@ parameter type="System.String" name="NomeClasseDataProps" #>
<#@ parameter type="System.String" name="NomeTabela" #>
<#@ parameter type="System.String" name="NomeInstanciaModulo" #>
<#@ parameter type="System.String" name="NomeModulo" #>
<#@ parameter type="System.String" name="NomeInstanciaDto" #>
<#@ parameter type="System.String" name="NomeDto" #>
using System.Data;
using RM.Lib;
using RM.Lib.Server;
using RM.Lib.Notification;

<#
string NomeTabelaLower = NomeTabela.ToLower();
#>

namespace <#= NomeNameSpace #>
{
  [System.ServiceModel.ServiceBehavior(IncludeExceptionDetailInFaults = true)]
  [RMSServerInfo(typeof(Properties.Resources), nameof(Properties.Resources.<#= NomeResourceInfoServer #>), CodSistema.Sau)]
  [RMSServerSecurityInfo(typeof(Properties.Resources), nameof(Properties.Resources.<#= NomeResourceInfoServer #>), CodSistema.Sau, 0)]
  [RMSSecurityFilter()]
  public class <#= NomeClasse #> : RMSDataServer 
  { 
	private string _sqlBase = @"";

	protected override void DoGetDataSet(out DataSet dataSet)
	{
		dataSet = new <#= NomeClasseDataSet #>();
	}

	protected override void DoReadView(DataSet dataSet, object[] filter, object ownerData)
	{
		string sql = _sqlBase + " /*WHERE*/";
		DBS.QueryFill(dataSet, <#= NomeClasseDataProps #>.<#= NomeTabelaLower #>, sql, 0, 0, filter);
	}

	protected override void DoReadRecord(DataSet dataSet, object[] primaryKey, object ownerData)
	{
		string sql = _sqlBase + @"WHERE CAMPOSCHAVES";
	
		DBS.QueryFill(dataSet, <#= NomeClasseDataProps #>.<#= NomeTabelaLower #>, sql, primaryKey);
	}

	protected override void ValidateRow(DataRow row)
	{
		INotification notification = Notification.Instance;
	
		using (var dbo = new DataObjects())
		using (var <#= NomeInstanciaModulo #> = CreateModule<I<#= NomeModulo #>>("<#= NomeModulo #>"))
		{
			var <#= NomeInstanciaDto #> = dbo.ReadFromRow<<#= NomeDto #>>(row);
		
		/* Validações utilizando o módulo */
		};

		if (notification.HasAnyNotification)
			throw new RMSValidateException(notification.GetMessages());
	}	
  }
}